---

- name: "Install tmux (via OS package manager)"
  ansible.builtin.package:
    name: "{{ tmux_package_name }}"
  become: true
  when: (ansible_facts['system'] == "Linux") and (not tmux_prefer_homebrew)
  tags: [tmux, become]

- name: "Install tmux (via Homebrew)"
  community.general.homebrew:
    name: "{{ tmux_package_name }}"
  when: (ansible_facts['system'] == "Darwin") or (tmux_prefer_homebrew)
  tags: [tmux, install]

- name: "Ensure tmux config path exists"
  ansible.builtin.file:
    path: "{{ tmux_rc_path }}"
    mode: "0755"
    state: directory
  tags: [tmux, dotfiles]

- name: "Template tmux config"
  vars:
    filename: "{{ item['key'] }}"
    config: "{{ item['value'] }}"
  ansible.builtin.template:
    src: "tmux.conf.j2"
    dest: "{{ tmux_rc_path }}/{{ filename }}.conf"
    mode: "0755"
  loop: "{{ tmux_config | ansible.builtin.combine(tmux_config_custom, recursive=true) | dict2items }}"
  tags: [tmux, dotfiles]

- name: "Install tmux plugins"
  ansible.builtin.git:
    repo: "{{ item['repo'] }}"
    dest: "{{ tmux_plugins_dir }}/{{ item['name'] }}"
    depth: 1
    version: "{{ item['version'] | default(omit) }}"
  loop: "{{ tmux_plugins }}"
  loop_control:
    label: "{{ item['name'] }}"
  tags: [tmux, tmux_plugins, dotfiles]
