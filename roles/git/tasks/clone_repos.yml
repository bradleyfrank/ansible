---

- name: "Check SSH agent socket"
  ansible.builtin.stat:
    path: "{{ git_ssh_auth_sock }}"
  register: stat_ssh_auth_sock

- name: "Manual ssh-agent setup"
  when: not stat_ssh_auth_sock['stat']['exists']
  notify: "Stop ssh-agent"
  block:
    - name: "Start ssh-agent"
      ansible.builtin.shell:
        cmd: |
          eval $(ssh-agent -s) > /dev/null
          echo "{\"SSH_AUTH_SOCK\":\"$SSH_AUTH_SOCK\",\"SSH_AGENT_PID\":\"$SSH_AGENT_PID\"}"
      register: cmd_eval
      changed_when: true
    - name: "Add key to ssh-agent"
      environment: "{{ cmd_eval['stdout'] }}"
      ansible.builtin.expect:
        command: "ssh-add {{ git_ssh_key_private }}"
        responses:
          passphrase: "{{ git_ssh_key_passphrase }}"
    - name: "Set ssh-agent socket"
      ansible.builtin.set_fact:
        git_ssh_auth_sock: "{{ cmd_eval['stdout'] | from_json | json_query('SSH_AUTH_SOCK') }}"
        git_ssh_auth_pid: "{{ cmd_eval['stdout'] | from_json | json_query('SSH_AGENT_PID') }}"

- name: "Create repository directories"
  vars:
    git_repos_name: "{{ item['url'] | basename | split('.') | first }}"
    git_repos_dirname: "{{ git_repos_path }}/{{ git_repos_name }}"
    git_repos_branch: "{{ '/' + item['branch'] | default('main') }}"
  ansible.builtin.file:
    path: "{{ git_repos_dirname }}{{ git_repos_branch if git_repos_as_worktrees else '' }}"
    state: directory
    mode: "0755"
  loop: "{{ git_repos }}"
  loop_control:
    label: "{{ git_repos_name }}"

- name: "Clone repositories"
  vars:
    git_repos_name: "{{ item['url'] | basename | split('.') | first }}"
    git_repos_dirname: "{{ git_repos_path }}/{{ git_repos_name }}"
    git_repos_branch: "{{ '/' + item['branch'] | default('main') }}"
  ansible.builtin.git:
    repo: "{{ item['url'] }}"
    version: "{{ item['branch'] | default('main') }}"
    dest: "{{ git_repos_dirname }}{{ git_repos_branch if git_repos_as_worktrees else '' }}"
    accept_hostkey: true
    key_file: "{{ git_ssh_key_private }}"
    ssh_opts: "-o 'IdentityAgent={{ git_ssh_auth_sock }}'"
    update: "{{ git_repos_update }}"
  loop: "{{ git_repos }}"
  loop_control:
    label: "{{ git_repos_name }}"
