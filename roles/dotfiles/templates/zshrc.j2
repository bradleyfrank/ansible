PATH=""
{% if 'Darwin' in ansible_system %}
PATH={{ python3_user_base.stdout }}/bin
{% endif %}
{% for item in paths %}
PATH={{ item }}:"$PATH"
{% endfor %}

MANPATH=""
{% for item in manpaths %}
MANPATH={{ item }}:"$MANPATH"
{% endfor %}

{% for item in exports %}
export {{ item }}
{% endfor %}

{% for item in evals %}
eval "{{ item }}"
{% endfor %}

{% for key, value in aliases.items() %}
alias {{ key }}='{{ value }}'
{% endfor %}

{% for key, value in functions.items() %}
function {{ key }}() {
  {{ value | indent( width=2, indentfirst=false) }}
}

{% endfor -%}

{% if 'MacOSX' in ansible_distribution %}
source /usr/local/etc/bash_completion.d/git-prompt.sh
source /usr/local/opt/fzf/shell/completion.zsh
source /usr/local/opt/fzf/shell/key-bindings.zsh
source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source /usr/local/share/zsh-autosuggestions/zsh-autosuggestions.zsh
{% elif ('Ubuntu' in ansible_distribution) or ('Pop!_OS' in ansible_distribution) %}
source /etc/bash_completion.d/git-prompt
source /usr/share/doc/fzf/examples/completion.zsh
source /usr/share/doc/fzf/examples/key-bindings.zsh
source /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source /usr/share/zsh-autosuggestions/zsh-autosuggestions.zsh
{% elif 'Fedora' in ansible_distribution %}
source /etc/bash_completion.d/git-prompt
source /usr/share/fzf/shell/key-bindings.zsh
source /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source /usr/share/zsh-autosuggestions/zsh-autosuggestions.zsh
{% endif %}
source {{ ansible_user_dir }}/.local/share/k8s/fubectl
source {{ ansible_user_dir }}/.local/share/k8s/kubectl.zsh
source {{ ansible_user_dir }}/.local/share/gcloud/gcsh

{% if 'remmac06432' in ansible_hostname -%}
# ----- begin oreilly config ----- #
source {{ ansible_user_dir }}/.infractl/secrets
source /usr/local/bin/google-cloud-sdk/completion.zsh.inc
# ----- end oreilly config ------- #
{% endif %}


function precmd() {
  local rc=$?
  local reset="%f"
  local blue="%F{33}" \
        cyan="%F{37}" \
        violet="%F{61}" \
        green="%F{64}" \
        magenta="%F{125}" \
        red="%F{160}" \
        orange="%F{166}" \
        base03="%F{234}"

  _NL=$'\n' _PROMPT="[%#]" _PYENV="" _CWD="[${blue}%(5~|%-1~/.../%3~|%~)${reset}]"
  [[ -n "$VIRTUAL_ENV" ]] && _PYENV="-[${cyan}Py $(basename "$VIRTUAL_ENV")${reset}]"

  case "$rc" in
    0) _PROMPT="%B${green}${_PROMPT}${reset}%b "   ;;
    1) _PROMPT="%B${red}${_PROMPT}${reset}%b "     ;;
    *) _PROMPT="%B${magenta}${_PROMPT}${reset}%b " ;;
  esac

  __git_ps1 "${_NL}${_CWD}" "${_PYENV}${_NL}${_PROMPT}" "-[%s]"
}


setopt appendhistory           # Immediately append history instead of overwriting
setopt autocd                  # If only directory path is entered, cd there.
setopt correct                 # Auto correct mistakes
setopt extended_history        # Save each commandâ€™s beginning timestamp and the duration
setopt extendedglob            # Extended globbing. Allows using regular expressions with *
setopt hist_verify             # Confirm commands from history expansion
setopt histignorealldups       # If a new command is a duplicate, remove the older one
setopt inc_append_history_time # Time taken by the command is recorded correctly in the history file
setopt nobeep                  # No beep
setopt nocaseglob              # Case insensitive globbing
setopt numericglobsort         # Sort filenames numerically when it makes sense
setopt rcexpandparam           # Array expension with parameters

HISTFILE=~/.zsh_history
HISTSIZE=2000
SAVEHIST=5000

zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}'  # Case insensitive tab completion
zstyle ':completion:*' menu select                 # Use menu selection for completion
zstyle ':completion:*' list-suffixes               # Show ambiguous components for partial pathnames
zstyle ':completion:*' rehash true                 # Auto find new executables in path 
zstyle ':completion:*' accept-exact '*(N)'         # Speed up completions
zstyle ':completion:*' use-cache on                # "
zstyle ':completion:*' cache-path ~/.zsh/cache     # "
WORDCHARS=${WORDCHARS//\/[&.;]}                    # Don't consider these part of the word

bindkey -e                                         # Emacs style shortcuts

bindkey '^[[7~' beginning-of-line                  # Home key
bindkey '^[[H' beginning-of-line                   # Home key
if [[ "${terminfo[khome]}" != "" ]]; then
  bindkey "${terminfo[khome]}" beginning-of-line   # [Home] - Go to beginning of line
fi
bindkey '^[[8~' end-of-line                        # End key
bindkey '^[[F' end-of-line                         # End key
if [[ "${terminfo[kend]}" != "" ]]; then
  bindkey "${terminfo[kend]}" end-of-line          # [End] - Go to end of line
fi
bindkey '^[[3~' delete-char                        # Delete key
bindkey '^[[C'  forward-char                       # Right key
bindkey '^[[D'  backward-char                      # Left key
bindkey '^[[5~' history-beginning-search-backward  # Page up key
bindkey '^[[6~' history-beginning-search-forward   # Page down key
bindkey '^[Oc' forward-word                        # Navigate words with ctrl+arrow keys
bindkey '^[Od' backward-word                       # "
bindkey '^[[1;5D' backward-word                    # "
bindkey '^[[1;5C' forward-word                     # "
bindkey '^H' backward-kill-word                    # Delete previous word with ctrl+backspace
bindkey '^[[Z' undo                                # Shift+tab undo last action

autoload -Uz compinit zmv zcalc && compinit

complete -F __start_kubectl k
