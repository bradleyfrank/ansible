#!/usr/bin/env bash

# @meta describe Generate passwords, PINs, and passphrases
# @meta author Brad Frank
# @meta require-tools pwgen,diceware
# @meta version 1.0.0

C_BOLD=$(tput bold)
C_RED=$(tput setaf 1)
C_GREEN=$(tput setaf 2)
C_BLUE=$(tput setaf 4)
C_RESET=$(tput sgr0)


genRandNum() {
  local numLength; numLength="$1"
  local randNum; randNum=0

  while (( ${#randNum} < $numLength )); do
    randNum="${randNum}${RANDOM}"
  done

  printf "${randNum:0:$numLength}"
}


# @cmd Generate various types of passwords 
main() {
  local -a length; length=(8 16 24 32)
  local -a segments; segments=(2 3 4 5)

  _title() { printf "%s==> %s%s\n" "$C_BOLD" "$1" "$C_RESET"; }
  _result() { printf "    %s%s[%2d]%s %s\n" "$C_BOLD" "$C_RED" "$1" "$C_RESET" "$2"; }

  
  _title "ALPHA"
  for len in "${length[@]}"; do
    _result "$len" "$(pwgen -1 --capitalize --no-numerals "$len")"
  done
  printf "\n"

  _title "NUMERIC"
  for len in "${length[@]}"; do
    _result "$len" "$(genRandNum "$len")"
  done
  printf "\n"

  _title "ALPHANUMERIC"
  for len in "${length[@]}"; do
    _result "$len" "$(pwgen -1 --capitalize --numerals "$len")"
  done
  printf "\n"

  _title "ALPHANUMERIC + SPECIAL"
  for len in "${length[@]}"; do
    _result "$len" "$(pwgen -1 --capitalize --numerals --symbols "$len")"
  done
  printf "\n"
    
  _title "DICEWARE"
  for len in "${segments[@]}"; do
    _result "$len" "$(diceware --num "$len")"
  done
  printf "\n"

  _title "DICEWARE + NUMERIC"
  for len in "${segments[@]}"; do
    _result "$len" "$(diceware --num "$len")-$(genRandNum "$len")"
  done
  printf "\n"
}


eval "$(argc --argc-eval "$0" "$@")"
