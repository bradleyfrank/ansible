---

## GLOBAL

global_homebrew_prefix: "/home/linuxbrew/.linuxbrew"
global_email_address: "bradfrank@fastmail.com"
global_is_desktop_system: False
global_desktop_environment: ""
cloud_packages: []

## ROLES

# cloud_architecture: "{{ cloud_package_arch_defaults[ansible_facts['machine']] }}"
# cloud_install_from_homebrew: "{{ cloud_install_from_homebrew_defaults[cloud_architecture] }}"
# cloud_bin_path: "{{ cloud_bin_path_defaults[cloud_architecture] }}"
# cloud_krew_bin: "{{ cloud_bin_path }}/kubectl krew"
# cloud_k9s_config_path: "{{ cloud_k9s_config_defaults[ansible_facts['system']] }}"
# cloud_krew_plugins:
#   - cert-manager
#   - deprecations
#   - get-all
#   - neat
#   - stern
# cloud_packages:
#   - kubectl
#   - krew
#   - k9s
# desktop_logi_app_install: false
# desktop_replacement_icons_dir: "icons"
# desktop_fonts_dir: "{{ desktop_fonts_dir_defaults[ansible_facts['system']] }}"
# desktop_packages: "{{ desktop_packages_defaults[ansible_facts['system']] }}"
# desktop_current_environment: "{{ global_desktop_environment | default('') }}"
# desktop_has_desktop: "{{ global_is_desktop_system | default(false) }}"
# desktop_fonts_install:
#   - "JetBrainsMono"
#   - "SourceCodePro"
# desktop_fonts_current_version: "{{
#   ansible_facts['desktop_fonts_current_version'] | default('v0.0.0')
# }}"
# desktop_apps_paths:
#   - "/Applications"
#   - "{{ ansible_facts['user_dir'] }}/Applications"
# docker_install_desktop_version: false
# docker_install_optional_packages: true
# git_packages:
#   - git
#   - gh
# git_github_token: ""
# git_global_config_dir: "{{ ansible_facts['user_dir'] }}/.config/git"
# git_global_config_file: "{{ git_global_config_dir }}/config"
# git_global_ignore_file: "{{ git_global_config_dir }}/ignore"
# git_ssh_auth_sock: ""
# git_ssh_auth_pid: ""
# git_ssh_authorized_keys_from_github: true
# git_ssh_authorized_keys_match: "[?contains(title,'{{ ansible_facts['user_id'] }}')&&!contains(title,'{{ ansible_facts['hostname'] }}')]"  # "[*]" (match all)
# git_ssh_key_upload: true
# git_ssh_key_name: "{{ ansible_facts['user_id'] }}@{{ ansible_facts['hostname'] }}"
# git_ssh_key_private: "{{ ansible_facts['user_dir'] }}/.ssh/id_ed25519"
# git_ssh_key_public: "{{ git_ssh_key_private }}.pub"
# git_ssh_key_passphrase: "{{ ssh_keys['id_ed25519']['passphrase'] | default('') }}"
# git_signing_key_upload: true
# git_signing_key_type: "ssh"
# git_signing_key_file: "{{ git_ssh_key_private }}.pub"
# git_signing_allowed_signers: "{{ ansible_facts['user_dir'] }}/.ssh/allowed_signers"
# git_repos: []
# git_repos_update: false
# git_repos_as_worktrees: true
# git_repos_path: "{{ ansible_facts['user_dir'] }}/Development/Projects"
# onepassword_vault: "Private"
# onepassword_write_session_file: false
# onepassword_use_gui_integration: "{{ global_is_desktop_system | default(false) }}"
# pkg_mgr_current_desktop: "{{ global_desktop_environment | default('') }}"
# pkg_mgr_desktop_present: "{{ global_is_desktop_system | default(false) }}"
# pkg_mgr_packagekit_enabled: true
# pkg_mgr_bat_exec: "{{ pkg_mgr_bat_exec_defaults[ansible_facts['distribution']] }}"
# pkg_mgr_bin_path:
#   - "/opt/homebrew/bin"
#   - "/home/linuxbrew/.linuxbrew/bin"
#   - "/usr/local/bin"
#   - "{{ ansible_facts['user_dir'] }}/.local/bin"
#   - "{{ ansible_facts['user_dir'] }}/bin"
#   - "{{ ansible_facts['env']['PATH'] }}"
# pkg_mgr_homebrew_taps: []
# pkg_mgr_homebrew_casks: []
# pkg_mgr_homebrew_casks_upgrade: true
# pkg_mgr_homebrew_casks_external: true
# pkg_mgr_homebrew_formulas: []
# pkg_mgr_homebrew_formulas_upgrade: true
# pkg_mgr_repos: []
# pkg_mgr_packages: []
# pkg_mgr_flatpak_install: "{{ pkg_mgr_desktop_present }}"
# pkg_mgr_flatpak_remotes: []
# pkg_mgr_flatpak_packages: {}
# pkg_mgr_mas_apps: []
# pkg_mgr_bin_dir: "{{ ansible_facts['user_dir'] }}/.local/bin"
# pkg_mgr_binaries: []
# ssh_packages: "{{ ssh_packages_defaults[ansible_facts['system']] }}"
# ssh_manage_config: true
# ssh_manage_config_force: false
# ssh_harden_security: true
# ssh_config:
#   - host: "*"
#     args:
#       User: "{{ ansible_facts['user_id'] }}"
# ssh_keys:
#   id_rsa:
#     type: "rsa"
#     passphrase: ""
#   id_ed25519:
#     type: "ed25519"
#     passphrase: ""
# ssh_manage_host_keys: true
# ssh_host_keys:
#   - "rsa"
#   - "ed25519"
#   - "ecdsa"
# system_linux_has_desktop: "{{ global_is_desktop_system | default(false) }}"
# system_linux_current_desktop: "{{ global_desktop_environment | default('') }}"
# system_linux_dconf_defaults: []
# system_linux_dconf_distro: []
# system_linux_dns_fallback: ["9.9.9.9", "1.1.1.1"]
# system_linux_dracut_settings: []
# system_macos_defaults: []
# system_macos_launchd: {}
# system_macos_reset_dock: true
# system_macos_sleep_display: 15
# system_macos_sleep_computer: 30
# system_macos_firewall_enabled: true
# system_macos_locate_enabled: true
# system_macos_unhide_user_library: true
# system_macos_unhide_volumes: true
# tmux_config: {}
# tmux_clipboard: "{{ tmux_clipboard_defaults[ansible_facts['system']] }}"
# tmux_plugins_dir: "{{ ansible_facts['user_dir'] }}/.local/share"
# tmux_config_dir: "{{ ansible_facts['user_dir'] }}/.config/tmux"
# tmux_packages:
#   - tmux
#   - tmuxp
# tmux_plugins:
#   - name: "tmux-resurrect"
#     repo: "https://github.com/tmux-plugins/tmux-resurrect.git"
#     exec: "resurrect.tmux"
#   - name: "tmux-continuum"
#     repo: "https://github.com/tmux-plugins/tmux-continuum.git"
#     exec: "continuum.tmux"
# vim_packages:
#   - vim
# vim_rc: "{{ ansible_facts['user_dir'] }}/.vimrc"
# vim_extensions_dir: "{{ ansible_facts['user_dir'] }}/.vim/pack/default/start"
# vim_extensions:
#   - name: "vim-airline"
#     repo: "https://github.com/vim-airline/vim-airline.git"
#   - name: "vim-airline-themes"
#     repo: "https://github.com/vim-airline/vim-airline-themes.git"
#   - name: "vim-gitgutter"
#     repo: "https://github.com/airblade/vim-gitgutter.git"
#     version: "main"
#   - name: "vim-indent-guides"
#     repo: "https://github.com/preservim/vim-indent-guides.git"
#   - name: "vim-terraform"
#     repo: "https://github.com/hashivim/vim-terraform.git"
#   - name: "vim-solarized8"
#     repo: "https://github.com/lifepillar/vim-solarized8.git"
#   - name: "vim-jinja2-syntax"
#     repo: "https://github.com/Glench/Vim-Jinja2-Syntax.git"
#   - name: "fzf.vim"
#     repo: "https://github.com/junegunn/fzf.vim.git"
#   - name: "vim-fugitive"
#     repo: "https://github.com/tpope/vim-fugitive.git"
#   - name: "vim-css-color"
#     repo: "https://github.com/ap/vim-css-color.git"
#   - name: "vim-markdown"
#     repo: "https://github.com/preservim/vim-markdown.git"
#   - name: "vim-peekaboo"
#     repo: "https://github.com/junegunn/vim-peekaboo.git"
# zsh_packages:
#   - zsh
#   - zsh-autosuggestions
#   - zsh-syntax-highlighting
# zsh_bin: "{{ lookup('ansible.builtin.first_found', files=['zsh'], paths=zsh_bin_search_paths) }}"
# zsh_manage_zcompdump: true
# zsh_plugins_dir: "{{ ansible_facts['user_dir'] }}/.local/share"
# zsh_rcd_dir: "{{ ansible_facts['user_dir'] }}/.zshrc.d"
# zsh_functions_dir: "{{ ansible_facts['user_dir'] }}/.local/share/zsh/site-functions"
# zsh_supplemental_dirs:
#   - "{{ zsh_plugins_dir }}"
#   - "{{ zsh_functions_dir }}"
#   - "{{ zsh_rcd_dir }}"
# zsh_completions:
#   - name: "cht"
#     command: "curl -L https://cheat.sh/:zsh"
#   - name: "nb"
#     command: "curl -L https://raw.githubusercontent.com/xwmx/nb/master/etc/nb-completion.zsh"
# zsh_plugins:
#   - name: "fzf-tab"
#     repo: "https://github.com/Aloxaf/fzf-tab"
#     source: "fzf-tab.plugin.zsh"
#   - name: "zsh-vi-mode"
#     repo: "https://github.com/jeffreytse/zsh-vi-mode.git"
#     source: "zsh-vi-mode.plugin.zsh"
#   - name: "base16-shell"
#     repo: "https://github.com/chriskempson/base16-shell.git"
#     source: "profile_helper.sh"
