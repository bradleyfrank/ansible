" keymappings
set ttimeoutlen=10
set pastetoggle=<C-p>
let g:mapleader = ','
map <C-n> :Lexplore<CR>
nnoremap <Leader>b :Buffers<CR>
nnoremap <Leader>d :put =strftime('## %F')<CR>
nnoremap <Leader>f :RG<CR>
nnoremap <Leader>i :IndentGuidesToggle<CR>
nnoremap <Leader>s :set spell!<CR>
nnoremap <Leader>t :let _s="[ ]  #TODO"<Bar>put=_s<CR>
nnoremap <Leader>u :source ~/.vimrc<CR>
nnoremap <Leader>w :let _s=@/<Bar>:%s/\s\+$//e<Bar>:let @/=_s<Bar><CR>  " rm trailing whitespace
nnoremap <Space> :nohlsearch<CR>
nnoremap H :bp<CR>
nnoremap L :bn<CR>


" layout/format/style
let g:indent_guides_auto_colors = 0
let g:indent_guides_enable_on_vim_startup = 0
let g:netrw_browse_split = 4
let g:netrw_winsize = 30
let g:vim_markdown_folding_disabled = 1
set colorcolumn=100
set conceallevel=0
set cursorline
set foldmethod=syntax
set hlsearch
set incsearch
set linebreak
set number
set showmatch


" tabs as spaces
set autoindent
set expandtab
set shiftwidth=2
set smarttab
set softtabstop=2
set tabstop=2


" functionality
set backspace=indent,eol,start
{% if 'MacOSX' in ansible_distribution -%}
set clipboard=unnamed
set rtp+={{ vim_homebrew_prefix }}/opt/fzf
{% elif 'Ubuntu' in ansible_distribution -%}
set rtp+=/usr/share/doc/fzf/examples/
{% endif -%}
set laststatus=2
set mouse=a
set noerrorbells
set novisualbell
set scrolloff=4
set updatetime=100
if exists('$TMUX')
  set ttymouse=xterm2
endif


" airline config
let g:airline#extensions#fzf#enabled = 1
let g:airline#extensions#tabline#buffer_nr_show = 1
let g:airline#extensions#tabline#buffers_label = ''
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#fnamemod = ':t'
let g:airline_inactive_collapse=1
let g:airline_section_b = ''
let g:airline_section_y = ''
let g:airline_section_z = '%3p%% %3l/%L:%3v'
let g:airline_skip_empty_sections = 1
let g:airline_solarized_dark_inactive_background = 1
let g:airline_solarized_enable_command_color = 1
let g:airline_solarized_normal_green = 1
let g:airline_stl_path_style = 'short'
let g:airline_theme = 'solarized'

" cursor settings
" 0 = blinking block
" 1 = blinking block (default)
" 2 = steady block
" 3 = blinking underline
" 4 = steady underline
" 5 = blinking bar (xterm)
" 6 = steady bar (xterm)
let &t_SI = "\e[6 q"  " insert mode
let &t_EI = "\e[2 q"  " normal mode


" colorscheme/syntax
let g:is_bash = 1
let g:is_posix = 1
syntax on
set termguicolors
set background=light
colorscheme solarized8
highlight Normal                             guibg=NONE
highlight IndentGuidesOdd   guifg=NONE       guibg=Cornsilk1
highlight IndentGuidesEven  guifg=NONE       guibg=NONE
