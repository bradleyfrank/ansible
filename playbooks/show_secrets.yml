---

- name: Decrypt inventory secrets
  hosts: localhost
  gather_facts: false

  vars:
    output_to_stdout: true
    output_to_file: false
    output_file: "{{ ansible_facts['user_dir'] }}/.ansible/secrets.yml"
    delete_vault_file: true
    vault_file: "{{ ansible_facts['user_dir'] }}/.ansible/vault"
    vault_secrets:
      - name: "GitHub token"
        secret: "{{ git_github_token }}"
      - name: "rsa SSH key"
        secret: "{{ ssh_keys['rsa'] }}"
      - name: "ed25519 SSH key"
        secret: "{{ ssh_keys['ed25519'] }}"

  tasks:
    - name: Check for vault file
      ansible.builtin.stat:
        path: "{{ vault_file }}"
      register: stat_vault_file

    - name: Add Vault password to output if file exists
      vars:
        vault_password: "{{ lookup('ansible.builtin.file', vault_file) }}"
      ansible.builtin.set_fact:
        vault_secrets: "{{ vault_secrets + [{'name': 'Vault password', 'secret': vault_password}] }}"
      when: stat_vault_file['stat']['exists']

    - name: Output decrypted inventory secrets to file
      ansible.builtin.copy:
        content: "---\n\n{{ vault_secrets | to_nice_yaml }}"
        dest: "{{ ansible_facts['user_dir'] }}/.ansible/secrets.yml"
        mode: "0600"
      when: output_to_file

    - name: Output decrypted inventory secrets to stdout
      ansible.builtin.debug:
        msg: "{{ item['secret'] }}"
      loop: "{{ vault_secrets }}"
      loop_control:
        label: "{{ item['name'] }}"
      when: output_to_stdout

    - name: Delete vault file
      ansible.builtin.file:
        path: "{{ vault_file }}"
        state: "absent"
      when: delete_vault_file
