---

- name: "Bootstrap Ansible"
  hosts: localhost

  vars:
    ansible_collections:
      - name: "ansible.posix"
      - name: "community.crypto"
      - name: "community.general"
      - name: "devsec.hardening"
    ansible_dir: "{{ ansible_facts['user_dir'] }}/.ansible"
    default_secrets:
      - name: "id_ed25519"
      - name: "id_rsa"
    host_vars_file: "{{ ansible_dir }}/inventory/host_vars/{{ ansible_facts['hostname'] }}.yml"
    vault_passphrase: "{{ lookup('community.general.random_words',
                                  numwords=5,
                                  delimiter='-',
                                  case='capitalize'
                                )
                       }}"

  vars_prompt:
    - name: "git_inventory_repo"
      prompt: "Git repository URL for inventory"
      private: false
    - name: "git_inventory_branch"
      prompt: "Repository branch for inventory"
      private: false
      default: "main"

  tasks:
    - name: "Install Ansible Galaxy requirements"
      community.general.ansible_galaxy_install:
        name: "{{ item['name'] }}"
        type: "collection"
        force: true
      loop: "{{ ansible_collections }}"
      tags: [collections]

    - name: "Create vault file"
      ansible.builtin.copy:
        content: "{{ vault_passphrase }}"
        dest: "{{ ansible_facts['user_dir'] }}/.ansible/vault"
        mode: "0400"
      tags: [vault]

    - name: "Clone inventory repository"
      ansible.builtin.git:
        repo: "{{ git_inventory_repo }}"
        dest: "{{ ansible_dir }}/inventory"
        accept_hostkey: true
        version: "{{ git_inventory_branch }}"
      tags: [inventory]

    - name: "Check for existing host_vars"
      ansible.builtin.stat:
        path: "{{ host_vars_file }}"
      register: stat_host_vars_yml
      tags: [inventory]

    - name: "Create host_vars"
      ansible.builtin.template:
        src: "host_vars.yml.j2"
        dest: "{{ host_vars_file }}"
        mode: "0755"
      when: not stat_host_vars['stat']['exists']
      tags: [inventory]

    - name: "Create encrypted secrets file"
      vars:
        passphrase: "{{ lookup('community.general.random_words',
                                numwords=5,
                                delimiter='-',
                                case='capitalize'
                              )
                        | ansible.builtin.vault(vault_passphrase)
                     }}"
      ansible.builtin.blockinfile:
        block: "{{ passphrase }}"
        create: true
        decrypt: false
        insertafter: EOF
        marker: ""
        mode: "0700"
        path: "{{ ansible_dir }}/inventory/secrets.enc"
      loop: "{{ encrypted_secrets | default_secrets | dict2items }}"
      tags: [inventory, vault]
