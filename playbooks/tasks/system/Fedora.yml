---

- name: Set hostname
  ansible.builtin.hostname:
    name: "{{ hostname }}"
    use: redhat
  become: true
  tags: hostname

- name: Set user shell to zsh and add to group 'cdrom'
  ansible.builtin.user:
    name: "{{ ansible_user_id }}"
    shell: /usr/bin/zsh
    groups: cdrom
    append: true
  become: true
  tags: user

- name: Add user to 'plugdev' group for open-razer
  ansible.builtin.user:
    name: "{{ ansible_user_id }}"
    groups: plugdev
    append: true
  become: true
  when: "'desktop' in system_type"
  tags: [user, groups]

- name: Symlink lcddefault conf for fonts
  ansible.builtin.file:
    src: /usr/share/fontconfig/conf.avail/11-lcdfilter-default.conf
    dest: /etc/fonts/conf.d/11-lcdfilter-default.conf
    owner: root
    group: root
    state: link
  become: true
  when: "'desktop' in system_type"
  tags: fonts

- name: Apply desktop settings
  block:
    - name: Apply Gnome settings
      community.general.dconf:
        key: "{{ item['key'] }}"
        value: "{{ item['value'] }}"
      loop: "{{ dconf | dict2items }}"
      loop_control:
        label: "{{ item['key'] }}"
      when: "'gnome' in desktop_env"
    - name: Apply KDE desktop settings
      ansible.builtin.copy:
        src: kde/plasma-org.kde.plasma.desktop-appletsrc
        dest: "{{ ansible_user_dir }}/.config/"
        mode: 0644
        backup: true
      when: "'kde' in desktop_env"
    - name: Apply KDE settings
      vars:
        default_path: "{{ ansible_user_dir }}/.config"
      community.general.ini_file:
        path: "{{ item['path'] | default(default_path) }}/{{ item['file'] }}"
        section: "{{ item['section'] }}"
        option: "{{ item['option'] }}"
        value: "{{ item['value'] }}"
        no_extra_spaces: true
      loop: "{{ kde_ini_settings }}"
      loop_control:
        label: "{{ item['file'] }}"
      when: "'kde' in desktop_env"
  when: ansible_env['XDG_SESSION_DESKTOP'] is defined
  tags: desktop

- name: Generate host keys
  ansible.builtin.command:
    cmd: ssh-keygen -A
    creates: /etc/ssh/ssh_host_*_key
  become: true
  tags: ssh

- name: Secure SSH settings
  import_role:
    name: devsec.hardening.ssh_hardening
  become: true
  tags: [ssh, security]
