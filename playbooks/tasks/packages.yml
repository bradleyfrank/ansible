---

- name: Lookup GitHub package latest releases
  community.general.github_release:
    user: "{{ item.user }}"
    repo: "{{ item.repo }}"
    action: latest_release
  register: github_latest_releases
  loop: "{{ github_packages }}"

- name: Include OS-specific packages
  ansible.builtin.include_tasks: "packages/{{ distro_vars[ansible_distribution] }}.yml"

- name: Get list of installed vscode extensions
  command: code --list-extensions
  changed_when: false
  failed_when: installed_extensions.rc not in [0,1]
  register: installed_extensions
  tags:
    - packages
    - vscode

- name: Install VSCode extensions
  vars:
    extensions_to_install: "{{ vscode_extensions | difference(installed_extensions.stdout_lines) }}"
  ansible.builtin.command: "{{ vscode['bin'] }} --install-extension {{ item }}"
  loop: "{{ extensions_to_install }}"
  tags:
    - packages
    - vscode

- name: Install Python packages
  ansible.builtin.pip:
    name: "{{ python_packages }}"
    extra_args: --user
  tags:
    - packages
    - python

- name: Install packages from GitHub
  block:

      when: item.type == 'deb'
    - name: Install package
      vars:
        base_url: "https://github.com/{{ item.user }}/{{ item.repo }}/releases/download"
        version: "{{ package.latest_release }}"
      ansible.builtin.apt:
        deb: "{{ base_url }}/{{ version }}/{{ item.name }}_{{ version }}_{{ item.arch }}.deb"
      become: true
      when: item.type == 'deb'
  loop: "{{ github_packages | default(['']) }}"
