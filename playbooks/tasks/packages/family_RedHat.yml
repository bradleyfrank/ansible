---

- name: Install gpg keys
  ansible.builtin.rpm_key:
    key: "{{ item['gpgkey'] }}"
  loop: "{{ repos }}"
  loop_control:
    label: "{{ item['name'] }}"
  become: true
  tags: repos

- name: Install repositories via RPMs
  ansible.builtin.dnf:
    name: "{{ item['url'] }}/{{ item['rpm'] }}"
    disable_gpg_check: true
    state: present
  loop: "{{ rpms }}"
  become: true
  tags: repos

- name: Install repositories
  ansible.builtin.yum_repository:
    name: "{{ item['name'] }}"
    description: "{{ item['description'] }}"
    baseurl: "{{ item['baseurl'] }}"
    includepkgs: "{{ item['includepkgs'] | default('') }}"
    gpgcheck: "{{ item['gpgcheck'] | default(true) }}"
    gpgkey: "{{ item['gpgkey'] }}"
    repo_gpgcheck: "{{ item['repo_gpgcheck'] | default(false) }}"
    skip_if_unavailable: "{{ item['skip_if_unavailable'] | default(true) }}"
  loop: "{{ repos }}"
  loop_control:
    label: "{{ item['name'] }}"
  become: true
  tags: repos

- name: Upgrade all packages
  ansible.builtin.dnf:
    name: "*"
    state: latest
    update_cache: true
    install_weak_deps: true
  become: true

- name: Install cli packages
  ansible.builtin.dnf:
    name: "{{ packages['cli'] }}"
    state: present
    update_cache: true
  become: true
  tags: [packages, dnf]

- name: Install gui packages
  ansible.builtin.dnf:
    name: "{{ packages['gui'] }}"
    state: present
    update_cache: true
  become: true
  when: is_desktop
  tags: [packages, dnf]

- name: Install Hyper
  vars:
    github_url: "https://github.com/vercel/hyper/releases/download"
    filename: "hyper_{{ hyper_version['tag'] | replace('v','') }}_amd64.rpm"
  ansible.builtin.dnf:
    name: "{{ github_url }}/{{ hyper_version['tag'] }}/{{ filename }}"
    update_cache: true
  become: true
  when: is_desktop
  tags: [packages, dnf]
