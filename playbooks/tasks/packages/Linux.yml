---

- name: Stop packagekit
  ansible.builtin.systemd:
    name: packagekit
    state: stopped
  become: true
  tags: [packages, apt]

- name: Install gpg keys
  vars:
    distro: "{{ item['distro'] | default(ansible_distribution_version) }}"
  ansible.builtin.apt_key:
    url: "{{ item['key'] | default(omit) }}"
    keyring: "{{ item['keyring'] | default(omit) }}"
    id: "{{ item['id'] | default(omit) }}"
    keyserver: "{{ item['keyserver'] | default(omit) }}"
  loop: "{{ repos }}"
  loop_control:
    label: "{{ item['name'] }}"
  become: true
  when: distro == ansible_distribution_version
  tags: repos

- name: Install repositories
  vars:
    distro: "{{ item['distro'] | default(ansible_distribution_version) }}"
  ansible.builtin.apt_repository:
    repo: "{{ item['repo'] }}"
    filename: "{{ item['name'] }}"
  loop: "{{ repos }}"
  loop_control:
    label: "{{ item['name'] }}"
  become: true
  when: distro == ansible_distribution_version
  tags: repos

- name: Update system
  ansible.builtin.apt:
    name: "*"
    state: latest
    autoclean: true
    autoremove: true
    update_cache: true
    cache_valid_time: 3600
    install_recommends: true
  become: true
  register: apt_upgrade
  until: (apt_upgrade is success) or (
            'Failed to lock apt for exclusive operation' not in apt_upgrade['msg'] and
            '/var/lib/dpkg/lock' not in apt_upgrade['msg']
         )
  retries: 10
  delay: 30
  tags: [upgrade, apt]

- name: Install Ubuntu/Pop!_OS cli packages
  ansible.builtin.apt:
    name: "{{ packages['cli'] }}"
    state: present
    autoclean: true
    autoremove: true
    update_cache: true
    cache_valid_time: 3600
    install_recommends: true
    dpkg_options: force-overwrite  # bugs.launchpad.net/ubuntu/+source/rust-bat/+bug/1868517
  become: true
  register: cli_install
  until: (cli_install is success) or (
            'Failed to lock apt for exclusive operation' not in cli_install['msg'] and
            '/var/lib/dpkg/lock' not in cli_install['msg']
         )
  retries: 10
  delay: 30
  tags: [packages, apt]

- name: Install Ubuntu/Pop!_OS gui packages
  ansible.builtin.apt:
    name: "{{ packages['gui'] }}"
    state: present
    autoclean: true
    autoremove: true
    update_cache: true
    cache_valid_time: 3600
    install_recommends: true
  become: true
  register: gui_install
  until: (gui_install is success) or (
            'Failed to lock apt for exclusive operation' not in gui_install['msg'] and
            '/var/lib/dpkg/lock' not in gui_install['msg']
         )
  retries: 10
  delay: 30
  when: is_desktop
  tags: [packages, apt]

- name: Install flatpak remotes
  community.general.flatpak_remote:
    name: "{{ item['name'] }}"
    state: present
    flatpakrepo_url: "{{ item['url'] }}"
    method: user
  loop: "{{ flatpak_remotes }}"
  loop_control:
    label: "{{ item['name'] }}"
  when: is_desktop
  tags: [packages, flatpak]

- name: Install flatpak packages
  community.general.flatpak:
    name: "{{ item['value'] }}"
    state: present
    method: user
    remote: "{{ item['key'] }}"
  loop: "{{ flatpaks | dict2items }}"
  when: is_desktop
  tags: [packages, flatpak]

- name: Get latest version of Hyper
  community.general.github_release:
    user: vercel
    repo: hyper
    action: latest_release
  register: hyper_version
  when: is_desktop
  tags: [packages, deb]

- name: Install Hyper
  vars:
    github_url: "https://github.com/vercel/hyper/releases/download"
    filename: "hyper_{{ hyper_version['tag'] | replace('v','') }}_amd64.deb"
  ansible.builtin.apt:
    deb: "{{ github_url }}/{{ hyper_version['tag'] }}/{{ filename }}"
    install_recommends: true
    autoclean: true
    autoremove: true
    update_cache: true
    cache_valid_time: 3600
  become: true
  register: deb_install
  until: (deb_install is success) or (
            'Failed to lock apt for exclusive operation' not in deb_install['msg'] and
            '/var/lib/dpkg/lock' not in deb_install['msg']
         )
  retries: 10
  delay: 30
  when: is_desktop
  tags: [packages, deb]
