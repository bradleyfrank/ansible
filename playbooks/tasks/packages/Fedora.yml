---

- name: Stop packagekit
  ansible.builtin.systemd:
    name: packagekit
    state: stopped
  become: true
  tags: always

- name: Install gpg keys
  ansible.builtin.rpm_key:
    key: "{{ item['gpgkey'] }}"
    state: present
  loop: "{{ repos }}"
  loop_control:
    label: "{{ item['name'] }}"
  become: true
  when: system_type in item['system_type']
  tags: repos

- name: Install repositories
  ansible.builtin.yum_repository:
    name: "{{ item['name'] }}"
    description: "{{ item['description'] }}"
    baseurl: "{{ item['baseurl'] | default(omit) }}"
    metalink: "{{ item['metalink'] | default(omit) }}"
    includepkgs: "{{ item['includepkgs'] | default(omit) }}"
    exclude: "{{ item['exclude'] | default(omit) }}"
    gpgcheck: "{{ item['gpgcheck'] | default(true) }}"
    gpgkey: "{{ item['gpgkey'] }}"
    repo_gpgcheck: "{{ item['repo_gpgcheck'] | default(false) }}"
    skip_if_unavailable: "{{ item['skip_if_unavailable'] | default(true) }}"
  loop: "{{ repos }}"
  loop_control:
    label: "{{ item['name'] }}"
  become: true
  when: system_type in item['system_type']
  tags: repos

- name: Update all packages
  ansible.builtin.dnf:
    name: "*"
    state: latest
    update_cache: true
    install_weak_deps: true
  become: true
  tags: update

- name: Install cli packages
  ansible.builtin.dnf:
    name: "{{ rpms['cli'] }}"
    state: present
    update_cache: true
  become: true
  tags: [packages, dnf]

- name: Install gui packages
  ansible.builtin.dnf:
    name: "{{ rpms['gui']['common'] + rpms['gui'][desktop_env] }}"
    state: present
    update_cache: true
  become: true
  when: "'desktop' in system_type"
  tags: [packages, dnf]

- name: Install flatpak remotes
  community.general.flatpak_remote:
    name: "{{ item['name'] }}"
    state: present
    flatpakrepo_url: "{{ item['url'] }}"
    method: user
  loop: "{{ flatpaks['remotes'] }}"
  loop_control:
    label: "{{ item['name'] }}"
  tags: [packages, flatpak]

- name: Install flatpak packages
  community.general.flatpak:
    name: "{{ item['name'] }}"
    state: present
    method: user
    remote: "{{ item['remote'] | default('flathub') }}"
  loop: "{{ flatpaks['packages'] }}"
  when: "'desktop' in system_type"
  tags: [packages, flatpak]

- name: Remove repositories added by packages
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  become: true
  loop:
    - /etc/yum.repos.d/1password.repo  # See /opt/1Password/after-install.sh

- name: Start packagekit
  ansible.builtin.systemd:
    name: packagekit
    state: started
  become: true
  tags: always
