---

- name: Purge Snaps and snapd
  block:
    - name: Get list of installed Snaps
      ansible.builtin.find:
        paths: /var/snap
        recurse: false
        file_type: directory
        patterns: "^(?!snapd).*$"
        use_regex: true
      register: installed_snaps
    - name: Uninstall non-core Snaps
      vars:
        snap: "{{ item['path'] | basename }}"
      community.general.snap:
        name: "{{ snap }}"
        state: absent
      loop: "{{ installed_snaps['files'] }}"
      when: "'core' not in snap"
    - name: Uninstall core Snaps
      vars:
        snap: "{{ item['path'] | basename }}"
      community.general.snap:
        name: "{{ snap }}"
        state: absent
      loop: "{{ installed_snaps['files'] }}"
      when: "'core' in snap"
    - name: Uninstall snapd
      community.general.snap:
        name: snapd
        state: absent
    - name: Unmount snap directories
      ansible.posix.mount:
        path: "{{ item['mount'] }}"
        state: unmounted
      loop: "{{ ansible_mounts }}"
      when: "('/snap/core' in item['mount']) or ('/var/snap' in item['mount'])"
    - name: Remove snap directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop: ["/snap", "/var/snap", "/var/lib/snapd", "{{ ansible_user_dir }}/snap"]
    - name: Hold the snapd package
      dpkg_selections:
        name: snapd
        selection: hold
  become: true

- name: Install gpg keys
  vars:
    distribution_version: "{{ item['ansible_distribution_version'] | default(ansible_distribution_version) }}"
    distribution: "{{ item['ansible_distribution'] | default(ansible_distribution) }}"
  ansible.builtin.apt_key:
    url: "{{ item['key'] | default(omit) }}"
    keyring: "{{ item['keyring'] | default(omit) }}"
    id: "{{ item['id'] | default(omit) }}"
    keyserver: "{{ item['keyserver'] | default(omit) }}"
  loop: "{{ repos }}"
  loop_control:
    label: "{{ item['name'] }}"
  become: true
  when:
    - distribution_version == ansible_distribution_version
    - distribution == ansible_distribution
    - system_type in item['system_type']
  tags: repos

- name: Install repositories
  vars:
    distribution_version: "{{ item['ansible_distribution_version'] | default(ansible_distribution_version) }}"
    distribution: "{{ item['ansible_distribution'] | default(ansible_distribution) }}"
  ansible.builtin.apt_repository:
    repo: "{{ item['repo'] }}"
    filename: "{{ item['name'] }}"
  loop: "{{ repos }}"
  loop_control:
    label: "{{ item['name'] }}"
  become: true
  when:
    - distribution_version == ansible_distribution_version
    - distribution == ansible_distribution
    - system_type in item['system_type']
  tags: repos

- name: Update system
  ansible.builtin.apt:
    name: "*"
    state: latest
    autoclean: true
    autoremove: true
    update_cache: true
    cache_valid_time: 3600
    install_recommends: true
  become: true
  register: apt_upgrade
  until: (apt_upgrade is success) or (
            'Failed to lock apt for exclusive operation' not in apt_upgrade['msg'] and
            '/var/lib/dpkg/lock' not in apt_upgrade['msg']
         )
  retries: 10
  delay: 30

- name: Install cli packages
  ansible.builtin.apt:
    name: "{{ packages['cli'] }}"
    state: present
    autoclean: true
    autoremove: true
    update_cache: true
    cache_valid_time: 3600
    install_recommends: true
    dpkg_options: force-overwrite  # bugs.launchpad.net/ubuntu/+source/rust-bat/+bug/1868517
  become: true
  register: cli_install
  until: (cli_install is success) or (
            'Failed to lock apt for exclusive operation' not in cli_install['msg'] and
            '/var/lib/dpkg/lock' not in cli_install['msg']
         )
  retries: 10
  delay: 30
  tags: [packages, apt]

- name: Install gui packages
  ansible.builtin.apt:
    name: "{{ packages['gui'] }}"
    state: present
    autoclean: true
    autoremove: true
    update_cache: true
    cache_valid_time: 3600
    install_recommends: true
  become: true
  register: gui_install
  until: (gui_install is success) or (
            'Failed to lock apt for exclusive operation' not in gui_install['msg'] and
            '/var/lib/dpkg/lock' not in gui_install['msg']
         )
  retries: 10
  delay: 30
  when: "'desktop' in system_type"
  tags: [packages, apt]
