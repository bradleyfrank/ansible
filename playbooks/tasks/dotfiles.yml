---

- name: Create ~/Development folder structure
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/Development/{{ item }}"
    state: directory
    mode: 0755
  loop: ['Projects', 'Build', 'Scratch', 'Reference']
  tags: dev_dirs


- name: Clone reference Git repos
  ansible.builtin.git:
    repo: "{{ item.repo }}"
    dest: "{{ git_reference_repos_dest }}/{{ item.name }}"
    depth: '1'
    version: "{{ item.version | default(omit) }}"
  loop: "{{ git_reference_repos }}"
  tags: git_repos


- name: Pull latest Docker images
  environment:
    PYTHONPATH: "{{ ansible_env['PYTHONPATH'] | default('') }}:{{ python_user_site }}"
  community.docker.docker_image:
    name: "{{ item }}"
    source: pull
  loop: "{{ docker_images }}"
  tags: docker


- name: Install individual dotfiles
  block:
    - name: Create dotfile directory structure
      ansible.builtin.file:
        path: "{{ ansible_user_dir }}/{{ item.path }}"
        state: directory
        mode: 0755
      with_filetree: dotfiles/
      when: item.state == 'directory'
    - name: Install dotfiles
      ansible.builtin.copy:
        src: "{{ item.src }}"
        dest: "{{ ansible_user_dir }}/{{ item.path }}"
        mode: 0644
      with_filetree: dotfiles/
      when: item.state == 'file'
  tags: dotfiles


- name: Install tmux config
  ansible.builtin.template:
    src: tmux.conf.j2
    dest: "{{ ansible_user_dir }}/.tmux.conf"
    mode: 0644
  tags: tmux


- name: Install gitconfig
  ansible.builtin.template:
    src: gitconfig.j2
    dest: "{{ ansible_user_dir }}/.gitconfig"
    mode: 0755
  tags: git


- name: Install VSCode configs
  ansible.builtin.copy:
    src: conf/vscode/
    dest: "{{ vscode['config'] }}/"
    mode: 0755
  tags: vscode


- name: Install fonts
  block:
    - name: Ensure fonts directory exists
      ansible.builtin.file:
        path: "{{ font_dir }}"
        state: directory
        mode: 0700
    - name: Copy fonts
      ansible.builtin.copy:
        src: fonts/
        dest: "{{ font_dir }}/"
        mode: 0644
  tags: fonts


- name: Configure SSH directory
  block:
    - name: Ensure ~/.ssh directory exists
      ansible.builtin.file:
        path: "{{ ansible_user_dir }}/.ssh"
        state: directory
        mode: 0755
    - name: Set proper permissions on ~/.ssh/authorized_keys
      ansible.builtin.file:
        path: "{{ ansible_user_dir }}/.ssh/authorized_keys"
        state: touch
        mode: 0600
  tags: ssh

- name: Install SSH config
  ansible.builtin.copy:
    src: conf/ssh/config
    dest: "{{ ansible_user_dir }}/.ssh/config"
    mode: 0644
  tags: [ssh, ssh_config]


- name: Import Vim tasks
  ansible.builtin.import_tasks: "extensions/vim.yml"
  tags: [vim, extensions]


- name: Import Python tasks
  ansible.builtin.import_tasks: "extensions/python.yml"
  tags: [python, extensions]


- name: Import kubectl tasks
  ansible.builtin.import_tasks: "extensions/kubectl.yml"
  tags: [kubectl, extensions]


- name: Import vscode tasks
  ansible.builtin.import_tasks: "extensions/vscode.yml"
  tags: [vscode, extensions]


- name: Build zshrc
  block:
    - name: Register Python3 user base directory
      ansible.builtin.command: python3 -m site --user-base
      register: python3_user_base  # to add Python bin to macOS PATH
      check_mode: false
      when: ansible_system == 'Darwin'
    - name: Apply zshrc template
      ansible.builtin.template:
        src: zshrc.j2
        dest: "{{ ansible_user_dir }}/.zshrc"
        mode: 0644
    - name: Fix permissions for zsh
      ansible.builtin.file:
        path: "{{ item }}"
        mode: 0755
      loop: "{{ zsh_directories }}"
  tags: zsh
