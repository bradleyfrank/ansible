---

- name: Register SSH key with Github
  vars:
    github_keys:
      - "{{ ansible_user_dir }}/.ssh/id_ed25519.pub"
      - "{{ ansible_user_dir }}/.ssh/id_rsa.pub"
    pubkey: "{{ lookup('first_found', github_keys, errors='ignore') }}"
  community.general.github_key:
    name: "{{ ansible_user_id }}@{{ ansible_hostname }}"
    pubkey: "{{ lookup('file', pubkey) }}"
    state: present
    token: "{{ github['personal_token'] }}"
  when:
    - pubkey
    - upload_ssh_key_github
  tags: github

- name: Clone all personal repositories
  when: clone_personal_repos
  tags: github_repos
  block:
    - name: Query GitHub API for my repositories
      ansible.builtin.uri:
        url: "https://api.github.com/search/repositories?q=user:{{ github['username'] }}+archived:false"
        headers:
          Authorization: "token {{ github['personal_token'] }}"
      register: github_repos

    - name: Create Git project directories
      ansible.builtin.file:
        path: "{{ ansible_user_dir }}/Development/Projects/{{ item['name'] }}/{{ item['default_branch'] }}"
        state: directory
        mode: 0755
      loop: "{{ github_repos['json']['items'] }}"
      loop_control:
        label: "{{ item['name'] }}"

    - name: Clone my GitHub repositories
      vars:
        base_url: "https://{{ github['personal_token'] }}@github.com"
      ansible.builtin.git:
        repo: "{{ base_url }}/{{ github['username'] }}/{{ item['clone_url'] | basename }}"
        version: "{{ item['default_branch'] }}"
        dest: "{{ ansible_user_dir }}/Development/Projects/{{ item['name'] }}/{{ item['default_branch'] }}"
        accept_hostkey: true
        update: false
      loop: "{{ github_repos['json']['items'] }}"
      loop_control:
        label: "{{ item['name'] }}"

    - name: Update remote origin to SSH url
      community.general.git_config:
        repo: "{{ ansible_user_dir }}/Development/Projects/{{ item['name'] }}/{{ item['default_branch'] }}"
        scope: local
        name: remote.origin.url
        value: "{{ item['ssh_url'] }}"
      loop: "{{ github_repos['json']['items'] }}"
      loop_control:
        label: "{{ item['name'] }}"

- name: Only clone notes repository
  when: not clone_personal_repos
  tags: [github_repos, notes]
  block:
    - name: Clone notes repo
      vars:
        base_url: "https://{{ github['personal_token'] }}@github.com"
      ansible.builtin.git:
        repo: "{{ base_url }}/{{ github['username'] }}/notes-etc"
        version: main
        dest: "{{ ansible_user_dir }}/Development/Projects/notes-etc/main"
        accept_hostkey: true
        update: false

    - name: Update remote origin to SSH url
      community.general.git_config:
        repo: "{{ ansible_user_dir }}/Development/Projects/notes-etc/main"
        scope: local
        name: remote.origin.url
        value: "git@github.com:{{ github['username'] }}/notes-etc.git"

- name: Download references
  vars:
    http: https://raw.githubusercontent.com
    path: "{{ item['owner'] }}/{{ item['repo'] }}/{{ item['branch'] }}/{{ item['file'] }}"
    ext: "{{ item['file'] | splitext | last }}"
    file: "{{ item['repo'] | splitext | first | replace('-', '_') + ext }}"
  ansible.builtin.get_url:
    url: "{{ http }}/{{ path }}"
    dest: "{{ ansible_user_dir }}/Development/Reference/{{ file }}"
    mode: 0644
  loop: "{{ git_reference_repos }}"
  loop_control:
    label: "{{ item['repo'] }}"
  tags: [github_repos, git_ref_repos]

- name: Symlink notes file
  ansible.builtin.file:
    src: "{{ ansible_user_dir }}/Development/Projects/notes-etc/main/README.md"
    dest: "{{ ansible_user_dir }}/Development/Reference/Notes.md"
    state: link
  tags: core
