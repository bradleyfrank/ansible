---

- name: Register SSH key with Github
  vars:
    pubkey: "{{ ansible_user_dir }}/.ssh/id_ed25519.pub"
  community.general.github_key:
    name: "{{ ansible_user_id }}@{{ ansible_hostname }}"
    pubkey: "{{ lookup('ansible.builtin.file', pubkey) }}"
    state: present
    token: "{{ github_token['personal'] }}"
  when: [pubkey, upload_ssh_key_github]
  tags: github

- name: Fetch GitHub SSH signing keys
  ansible.builtin.uri:
    url: https://api.github.com/user/ssh_signing_keys
    method: GET
    status_code: [200]
    headers:
      Authorization: "Bearer {{ github_token['personal'] }}"
      Accept: "application/vnd.github+json"
      X-GitHub-Api-Version: "2022-11-28"
  register: github_ssh_signing_keys
  when: upload_ssh_key_github
  tags: github

- name: Register SSH signing key with Github
  vars:
    pubkey: "{{ ansible_user_dir }}/.ssh/id_ed25519.pub"
    key_contents: "{{ lookup('ansible.builtin.file', pubkey) | split(' ') }}"
    body:
      key: "{{ key_contents[0] }} {{ key_contents[1] }}"
      title: "{{ ansible_user_id }}@{{ ansible_hostname }}"
    key_uploaded: "{{ lookup('ansible.utils.index_of',
      github_ssh_signing_keys['json'], 'eq', body['title'], 'title') }}"
  ansible.builtin.uri:
    url: https://api.github.com/user/ssh_signing_keys
    method: POST
    body: "{{ body | to_nice_json }}"
    body_format: json
    status_code: [201]
    headers:
      Authorization: "Bearer {{ github_token['personal'] }}"
      Accept: "application/vnd.github+json"
      X-GitHub-Api-Version: "2022-11-28"
  when: [pubkey, upload_ssh_key_github, not key_uploaded]
  tags: github

- name: Clone all personal repositories
  when: clone_personal_repos
  tags: github
  block:
    - name: Query GitHub API for my repositories
      ansible.builtin.uri:
        url: "https://api.github.com/search/repositories?q=user:bradleyfrank+archived:false"
        headers:
          Authorization: "token {{ github_token['personal'] }}"
      register: github_repos

    - name: Create Git project directories
      ansible.builtin.file:
        path: "{{ ansible_user_dir }}/Development/Projects/{{ item['name'] }}/{{ item['default_branch'] }}"
        state: directory
        mode: 0755
      loop: "{{ github_repos['json']['items'] }}"
      loop_control:
        label: "{{ item['name'] }}"

    - name: Clone my GitHub repositories
      vars:
        base_url: "https://oauth2:{{ github_token['personal'] }}@github.com"
      ansible.builtin.git:
        repo: "{{ base_url }}/bradleyfrank/{{ item['clone_url'] | basename }}"
        version: "{{ item['default_branch'] }}"
        dest: "{{ ansible_user_dir }}/Development/Projects/{{ item['name'] }}/{{ item['default_branch'] }}"
        accept_hostkey: true
        update: false
      loop: "{{ github_repos['json']['items'] }}"
      loop_control:
        label: "{{ item['name'] }}"

    - name: Update remote origin to SSH url
      community.general.git_config:
        repo: "{{ ansible_user_dir }}/Development/Projects/{{ item['name'] }}/{{ item['default_branch'] }}"
        scope: local
        name: remote.origin.url
        value: "{{ item['ssh_url'] }}"
      loop: "{{ github_repos['json']['items'] }}"
      loop_control:
        label: "{{ item['name'] }}"

- name: Only clone notes repository
  when: not clone_personal_repos
  tags: github
  block:
    - name: Clone notes repo
      vars:
        base_url: "https://oauth2:{{ github_token['personal'] }}@github.com"
      ansible.builtin.git:
        repo: "{{ base_url }}/bradleyfrank/notes-etc"
        version: main
        dest: "{{ ansible_user_dir }}/Development/Projects/notes-etc/main"
        accept_hostkey: true
        update: false

    - name: Update remote origin to SSH url
      community.general.git_config:
        repo: "{{ ansible_user_dir }}/Development/Projects/notes-etc/main"
        scope: local
        name: remote.origin.url
        value: "git@github.com:bradleyfrank/notes-etc.git"

- name: Download references
  vars:
    http: https://raw.githubusercontent.com
    path: "{{ item['owner'] }}/{{ item['repo'] }}/{{ item['branch'] }}/{{ item['file'] }}"
    ext: "{{ item['file'] | splitext | last }}"
    file: "{{ item['repo'] | splitext | first | replace('-', '_') + ext }}"
  ansible.builtin.get_url:
    url: "{{ http }}/{{ path }}"
    dest: "{{ ansible_user_dir }}/Development/Reference/{{ file }}"
    mode: 0644
  loop: "{{ git_reference_repos }}"
  loop_control:
    label: "{{ item['repo'] }}"
  tags: github

- name: Symlink notes file
  ansible.builtin.file:
    src: "{{ ansible_user_dir }}/Development/Projects/notes-etc/main/README.md"
    dest: "{{ ansible_user_dir }}/Development/Reference/Notes.md"
    state: link
  tags: github
