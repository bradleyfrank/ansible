# [gc] alias for gcloud
alias gc='gcloud'

# [gpc] show current GCP project
alias gpc='gcloud config configurations describe default --format="value(properties.core.project)"'

# [gpl] list a subset of projects ; gpl <project1,project2,projectN>
gpl() { gcloud projects list | grep -E "^(PROJECT_ID|${1//,/|})" ; }

# [gpla] list all GCP projects
alias gpla='gcloud projects list --format="table(name,projectId,lifecycleState)"'

# [gps] set the active GCP project
gps() {
    local projects
    projects="$(gcloud projects list | _inline_fzf | awk '{print $1}')"
    gcloud config set project "$projects"
}

# [gpu] gcloud project unset
alias gpu='gcloud config unset project'

# [gcreds] sets GCP project credentials via environment variables
gcreds() {
    local sacct
    sacct="$(env | grep 'APPLICATION_CREDENTIALS' | _inline_fzf_nh | cut -f1 -d'=' | awk '{print $1}')"
    [[ -z "${(P)sacct}" ]] && { echo "Missing credential json file." ; return 1 ; }
    echo "Set GOOGLE_APPLICATION_CREDENTIALS to ${(P)sacct}"
    export GOOGLE_APPLICATION_CREDENTIALS="${(P)sacct}"
}

# [gtags] show tags for docker image in GCR ; gtags <image>
gtags() { gcloud container images list-tags gcr.io/common-build/"$1" ; }

# [ghelp] show this help message
ghelp() {
    echo "helper aliases and functions for gcloud SDK"
    echo
    grep -E '^# \[.+\]' "${(%):-%x}"
}
