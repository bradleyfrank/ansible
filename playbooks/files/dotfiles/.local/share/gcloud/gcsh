# [gc] alias for gcloud
alias gc="gcloud"

# [gpl] list all GCP projects
alias gpl="gcloud projects list"

# [gc-] gcloud --project <project>
alias gc-bh-dev='gcloud --project binderhub-dev'
alias gc-bh-prod='gcloud --project binderhub-prod'
alias gc-common-build='gcloud --project common-build'
alias gc-dataeng-dev='gcloud --project dataeng-dev-273349'
alias gc-dataeng-prod='gcloud --project dataeng-prod-308999'
alias gc-kc-core-dev='gcloud --project kc-core-dev'
alias gc-kc-core-prod='gcloud --project kc-core-prod'
alias gc-platform-data-dev='gcloud --project platform-data-dev-301120'
alias gc-platform-dev='gcloud --project platform-dev-788014'
alias gc-platform-prod='gcloud --project platform-prod-399563'
alias gc-playground='gcloud --project strong-keyword-184513'

# [gps] set the active GCP project
gps() {
    local projects
    projects="$(gcloud projects list | _inline_fzf | awk '{print $1}')"
    gcloud config set project "$projects"
    [ ! -z "$TMUX" ] && tmux refresh-client -S
}

# [gpu] gcloud project unset
alias gpu='gcloud config unset project'

# [gcreds] sets GCP project credentials via environment variables (ORM only)
gcreds() {
    local sacct
    sacct="$(env | grep 'APPLICATION_CREDENTIALS' | _inline_fzf_nh | cut -f1 -d'=' | awk '{print $1}')"
    [[ -z "${(P)sacct}" ]] && { echo "Missing INFRACTL credential json file." ; return 1 ; }
    echo "Set GOOGLE_APPLICATION_CREDENTIALS to ${(P)sacct}"
    export GOOGLE_APPLICATION_CREDENTIALS="${(P)sacct}"
}

# [ghelp] show this help message
ghelp() {
    echo "Usage of gcsh"
    echo
    echo "Helper aliases and functions for gcloud SDK"
    echo
    echo "Usage:"
    grep -E '^# \[.+\]' "${(%):-%x}"
}
