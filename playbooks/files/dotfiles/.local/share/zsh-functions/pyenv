#
# Manages virtualenvs and can install pip requirements.
# Author: Brad Frank
# Date: Oct 2021
# Tested: zsh 5.8 (x86_64-apple-darwin19.6.0)
#

pyenv() {
  local ve version mode pip; pip=1

  zparseopts -D -E -F -- \
    c=mode -create=mode r=mode -recreate=mode a=mode -activate=mode d=mode -deactivate=mode \
    n:=name -name:=name v:=version -version:=version p=pip -pip=pip \
  || { _pyenv_usage >&2; return 1; }

  case "$mode" in
        -c|--create) _pyenv_create    ;;
      -r|--recreate) _pyenv_recreate  ;;
      -a|--activate) _pyenv_activate  ;;
    -d|--deactivate) deactivate       ;;
  esac

  _pyenv_usage() {
    echo "Manages Python virtualenv"
    echo "Usage: pyenv [create | recreate | activate | deactivate"
    echo "-c              create virtualenv (default)"
    echo "  -n <name>     name of virtualenv"
    echo "  -v <version>  python version to use"
    echo "-a  activate virtualenv"
    echo "  -n <name>     name of virtualenv"
    echo "  -p            install pip packages from requirements.txt"
    echo "-d  deactivate virtualenv"
  }

  while getopts ':acdhn:pv:' flag; do
    case "$flag" in
      a) mode=activate ;;
      c) mode=create ;;
      d) deactivate ; return $? ;;
      h) _pyenv_usage; return 0 ;;
      n) ve="$OPTARG" ;;
      p) pip=0 ;;
      v) version="$OPTARG" ;;
      *) echo "Invalid argument." >&2; _pyenv_usage; return 1 ;;
    esac
  done

  _create() {
    local ve_version; ve_version=0
    [[ -z $ve ]] && ve="ve"
    [[ -z $version ]] && version=$(python3 --version | grep -Po '3\.\d+')
    [[ -d "$ve" ]] && ve_version="$(sed -rn 's/^version_info = (3\.[0-9]+).*$/\1/p' "$ve"/pyvenv.cfg)"
    if [[ "$ve_version" -ne "$version" ]]; then
      [[ -n $VIRTUAL_ENV ]] && deactivate
      rm -rf "$ve"
      virtualenv -p "$version" "$ve"
    else
      return 0
    fi
  }

  _activate() {
    [[ -z $ve ]] && ve="$(dirname "$(find . -maxdepth 2 -type f -name pyvenv.cfg)")"
    if [[ "$(wc -l <<< "$ve")" -gt 1 ]]; then
      echo "Multiple virtualenvs found; please specify with \`-n <name>\`." >&2
      return 1
    fi
    #shellcheck disable=SC1091
    source "$ve/bin/activate"
    if [[ $pip -eq 0 && -f requirements.txt ]]; then "$ve/bin/pip" install -r requirements.txt; fi
  }

  # case "$mode" in
  #   create)   _create   ;;
  #   activate) _activate ;;
  #   *)        _create && _activate ;;
  # esac
}
