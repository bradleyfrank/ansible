#!/usr/bin/env bash

#
# Provides a wrapper around ghostscript to compress PDF files.
# Author: Brad Frank
# Date: Nov 2020
# Tested: GNU bash, version 5.0.18(1)-release (x86_64-apple-darwin19.6.0)
# Requires: ghostscript
#

usage() {
    echo "Usage: pdf-compress -h | -c [compression] -f [file]"
    echo "  -c  Compression level using one of the following options:"
    echo "         screen   (screen-view-only quality, 72 dpi)"
    echo "         ebook    (low quality, 150 dpi)"
    echo "         printer  (high quality, 300 dpi)"
    echo "         prepress (high quality, color preserving, 300 dpi)"
    echo "         default  (default dpi)"
    echo "  -f  PDF file to compress."
}

compress() {
  local input file dir compression output
  input="$1" compression="$2"

  file="$(basename "$input")"
  dir="$(dirname "$input")"
  output="$dir/${file%.*}.$compression.pdf"

  if gs \
      -sDEVICE=pdfwrite \
      -dCompatibilityLevel=1.4 \
      -dPDFSETTINGS=/"$COMPRESS_LEVEL" \
      -dNOPAUSE \
      -dQUIET \
      -dBATCH \
      -sOutputFile="$output" \
      "$input" >/dev/null; then
    echo "Wrote: $output"
    return 0
  else
    return 1
  fi
}

main() {
  local OPTIND compression input; compression="ebook"

  while getopts ':hc:f:' flag; do
    case "$flag" in
      h) usage; exit 0 ;;
      c) compression="$OPTARG" ;;
      f) input="$OPTARG" ;;
      :) echo "Must supply an argument to -$OPTARG." >&2; usage; exit 1 ;;
     \?) echo "Invalid option: $OPTARG" >&2; usage; exit 1 ;;
    esac
  done

  [[ ! -f "$input" ]] && { echo "Error: file does not exist, skipping." >&2; exit 1; }
  [[ ! $compression =~ (screen|ebook|printer|prepress|default) ]] && \
    { echo "Error: invalid compression option." >&2; usage; exit 1; }
  compress "$input" "$compression"
}

main "$@"
