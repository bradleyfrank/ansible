PATH="$HOME/.local/bin"
PATH="$PATH:$HOME/.krew/bin"
{% if 'MacOSX' in ansible_distribution %}
PATH="$PATH:/usr/local/opt/coreutils/libexec/gnubin"
PATH="$PATH:/usr/local/opt/findutils/libexec/gnubin"
PATH="$PATH:/usr/local/opt/gawk/libexec/gnubin"
PATH="$PATH:/usr/local/opt/gnu-sed/libexec/gnubin"
PATH="$PATH:/usr/local/opt/gnu-tar/libexec/gnubin"
PATH="$PATH:/usr/local/opt/gnu-which/libexec/gnubin"
PATH="$PATH:/usr/local/opt/grep/libexec/gnubin"
PATH="$PATH:/usr/local/opt/gsed/libexec/gnubin"
PATH="$PATH:/usr/local/opt/libtool/libexec/gnubin"
PATH="$PATH:{{ python_user_path['MacOSX'] }}"
PATH="$PATH:/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/bin"
{% endif %}
PATH="$PATH:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin"

MANPATH="$HOME/.local/share/man"
{% if 'MacOSX' in ansible_distribution %}
MANPATH="$MANPATH:/usr/local/opt/coreutils/libexec/gnuman"
MANPATH="$MANPATH:/usr/local/opt/findutils/libexec/gnuman"
MANPATH="$MANPATH:/usr/local/opt/gawk/libexec/gnuman"
MANPATH="$MANPATH:/usr/local/opt/gnu-sed/libexec/gnuman"
MANPATH="$MANPATH:/usr/local/opt/gnu-tar/libexec/gnuman"
MANPATH="$MANPATH:/usr/local/opt/gnu-which/libexec/gnuman"
MANPATH="$MANPATH:/usr/local/opt/grep/libexec/gnuman"
MANPATH="$MANPATH:/usr/local/opt/gsed/libexec/gnuman"
MANPATH="$MANPATH:/usr/local/opt/libtool/libexec/gnuman"
{% endif %}
MANPATH="$MANPATH:/usr/local/share/man:/usr/share/man"


export PATH
export MANPATH
export VISUAL=vim
export EDITOR=vim
export DOCKER_BUILDKIT=1                # Build containers in parallel
export FZF_DEFAULT_OPTS="--reverse --height=50% --color=light --multi --info inline"
export LESS_TERMCAP_mb=$'\E[01;32m'     # Add colors to manpages
export LESS_TERMCAP_md=$'\E[01;32m'     # "
export LESS_TERMCAP_me=$'\E[0m'         # "
export LESS_TERMCAP_se=$'\E[0m'         # "
export LESS_TERMCAP_so=$'\E[01;47;34m'  # "
export LESS_TERMCAP_ue=$'\E[0m'         # "
export LESS_TERMCAP_us=$'\E[01;36m'     # "
export LESS=-r                          # "
export PRE_COMMIT_COLOR=never           # pre-commit colors incompatible with solarized-light
export ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=14"
{% if 'MacOSX' in ansible_distribution %}
export CLICOLOR=1
export CLOUDSDK_PYTHON=/usr/bin/python3
export HELPDIR=/usr/local/Cellar/zsh/{{ zsh_version['stdout'] }}/share/zsh/help
export HOMEBREW_CELLAR=/usr/local/Cellar
export HOMEBREW_PREFIX=/usr/local
export HOMEBREW_REPOSITORY=/usr/local/Homebrew
export INFOPATH=/usr/local/share/info:"${INFOPATH:-}"
export SHELL_SESSIONS_DISABLE=1         # See /etc/zshrc_Apple_Terminal
{% elif 'Fedora' in ansible_distribution %}
export HELPDIR=/usr/share/zsh/{{ zsh_version['stdout'] }}/help
{% endif %}


unalias run-help

alias gcommon='cd $(git rev-parse --git-common-dir | xargs dirname | xargs realpath --relative-to .)'
alias gtop='cd $(git rev-parse --show-toplevel | xargs realpath --relative-to .)'
alias gbranch='cd $(git worktree list --porcelain | grep -E "^worktree" | cut -d" " -f2 \
  | fzf --no-multi --ansi -i -1 --height=50% --reverse -0 --inline-info --border --preview="git log {} --" -d / --with-nth -1)'

alias pipi='python3 -m pip install --user'
alias pipr='python3 -m pip uninstall'
alias pipu='python3 -m pip list --outdated --format=json 2>/dev/null | jq -r ".[].name" \
  | xargs --no-run-if-empty python3 -m pip install --user --upgrade'

alias l='exa --color always --classify'
alias la='exa --color always --classify --all'
alias lc='exa --color always --classify --long --all --grid'
alias ld='exa --color always --classify --long --all --only-dirs'
alias lg='exa --color always --classify --long --all --git'
alias lG='exa --color always --classify --long --all --group'
alias ll='exa --color always --classify --long --all'
alias lp='exa --color always --classify --long --all --no-permissions --octal-permissions'
alias lS='exa --color always --classify --long --all --group-directories-first --sort size'
alias ls='ls --color --classify --human-readable'
alias lt='exa --color always --classify --long --all --sort time'

alias all='which -a'
alias condense='grep -Erv "(^#|^$)"'
alias cp='cp -i'
alias dw='diceware'
alias e='extract'
alias glances='glances --theme-white'
alias help='run-help'
alias isodate='date --iso-8601=seconds'
alias lower='tr "[:upper:]" "[:lower:]"'
alias mkpasswd='pwgen 16 1 -ABcny1'
alias mp='multipass'
alias psync='rsync -a --info=progress2'
alias pubip='dig myip.opendns.com @resolver1.opendns.com'
alias scp='rsync -va'
alias show='whence -f'
alias tf='terraform'
alias timestamp='date +%F_%T | tr -d ":-" | tr "_" "-"'
alias vs='code .'
{% if 'Fedora' in ansible_distribution %}
alias iowatch='watch -n 1 iostat -xy --human 1 1'
alias ipa='ip -c a'
alias lsblk='lsblk -o "NAME,FSTYPE,SIZE,UUID,MOUNTPOINT"'
alias lsports='lsof -i -P -n'
alias proc='ps -e --forest -o pid,ppid,user,time,cmd'
{% endif %}

cheat() { curl -s "cheat.sh/$1?style=vs"; }
code-remote() { code --remote=ssh-remote+"$1" /home/{{ ansible_user_id }}; }
dtags() { http https://registry.hub.docker.com/v1/repositories/"$1"/tags | jq -r '.[]|.name'; }
tardir() { tar -czf "${1%/}".tar.gz "$1"; }
{% if 'Fedora' in ansible_distribution and 'gnome' in desktop_env %}
gedit() { nohup /usr/bin/gedit "$@" &> /dev/null &; }
{% endif %}


zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}'         # Case insensitive tab completion
zstyle ':completion:*' completer _expand_alias _complete _ignored # Expand aliases with tab
zstyle ':completion:*' menu select                 # Use menu selection for completion
zstyle ':completion:*' list-suffixes               # Show ambiguous components for partial pathnames
zstyle ':completion:*' rehash true                 # Auto find new executables in path
zstyle ':completion:*' accept-exact '*(N)'         # Speed up completions
zstyle ':completion:*' use-cache on                # "
zstyle ':completion:*' cache-path ~/.zsh/cache     # "

WORDCHARS=${WORDCHARS//\/[&;]}                    # Don't consider these part of the word
CORRECT_IGNORE_FILE='[_|.]*'                       # Skip correcting commands matching pattern
HISTFILE=~/.zsh_history
HISTSIZE=2000
SAVEHIST=5000

setopt appendhistory           # Immediately append history instead of overwriting
setopt autocd                  # If only directory path is entered, cd there.
setopt correct                 # Auto correct mistakes
setopt extended_history        # Save each commandâ€™s beginning timestamp and the duration
setopt extendedglob            # Extended globbing. Allows using regular expressions with *
setopt hist_verify             # Confirm commands from history expansion
setopt histignorealldups       # If a new command is a duplicate, remove the older one
setopt inc_append_history_time # Time taken by the command is recorded correctly in the history file
setopt nobeep                  # No beep
setopt nocaseglob              # Case insensitive globbing
setopt numericglobsort         # Sort filenames numerically when it makes sense
setopt rcexpandparam           # Array expension with parameters

autoload -U +X bashcompinit && bashcompinit
autoload -Uz compinit zmv zcalc vcs_info edit-command-line run-help && compinit
zle -N edit-command-line

bindkey -e                                         # Emacs style shortcuts
bindkey '^[[7~' beginning-of-line                  # Home key
bindkey '^[[H' beginning-of-line                   # Home key
if [[ "${terminfo[khome]}" != "" ]]; then
  bindkey "${terminfo[khome]}" beginning-of-line   # [Home] - Go to beginning of line
fi
bindkey '^[[8~' end-of-line                        # End key
bindkey '^[[F' end-of-line                         # End key
if [[ "${terminfo[kend]}" != "" ]]; then
  bindkey "${terminfo[kend]}" end-of-line          # [End] - Go to end of line
fi
bindkey '^[[3~' delete-char                        # Delete key
bindkey '^[[C'  forward-char                       # Right key
bindkey '^[[D'  backward-char                      # Left key
bindkey '^[[5~' history-beginning-search-backward  # Page up key
bindkey '^[[6~' history-beginning-search-forward   # Page down key
bindkey '^X^E' edit-command-line


{% if 'MacOSX' in ansible_distribution %}
source /usr/local/opt/fzf/shell/completion.zsh
source /usr/local/opt/fzf/shell/key-bindings.zsh
source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source /usr/local/share/zsh-autosuggestions/zsh-autosuggestions.zsh
source /usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc
{% elif 'Fedora' in ansible_distribution %}
source /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source /usr/share/zsh-autosuggestions/zsh-autosuggestions.zsh
source /usr/share/fzf/shell/key-bindings.zsh
{% endif %}
for completion in {{ zsh['completions'] }}/*; do source "$completion"; done
for function in {{ zsh['functions'] }}/*; do source "$function"; done


{% if work_system -%}
source {{ ansible_user_dir }}/.infractl/secrets
complete -o nospace -C /usr/local/bin/terraform terraform
complete -o nospace -C /usr/local/bin/vault vault
{% endif %}


eval "$(dircolors $HOME/.dir_colors)"
eval "$(zoxide init zsh --hook pwd --cmd cd)"
eval "$(starship init zsh)"
{% if 'MacOSX' in ansible_distribution %}
eval "$(keychain --eval --ignore-missing --quiet --inherit any {{ ssh_private_keys | join(' ') }})"
{% elif 'Fedora' in ansible_distribution %}
eval "$(keychain --eval --ignore-missing --quiet {{ ssh_private_keys | join(' ') }})"
{% endif %}
