#!/usr/bin/env bash

#
# Displays various information for the tmux status bar.
# Author: Brad Frank
# Date: July 2021
# Tested: GNU bash, version 5.1.8(1)-release (x86_64-apple-darwin20.3.0)
#

declare -r fg_Default="#[fg=default]" \
           fg_Yellow="#[fg=colour136]" \
           fg_Green="#[fg=colour64]" \
           fg_Orange="#[fg=colour166]" \
           fg_Red="#[fg=colour160]"

get_uptime() {
  local uptime
  uptime=$(uptime | grep -Po 'up(.*?),' | awk '$1=$1' | sed "s/up/${fg_Green}up${fg_Default}/")
  printf "%s" "${uptime/,/}"
}

load_average() {
  local avg load output fg_Color
  while read -r avg; do
    load="$(printf "%.0f" "$(echo "($avg*100)/{{ ansible_processor_cores }}" | bc -l)")"
    if   [[ $load -ge 0   && $load -lt 100 ]]; then fg_Color=$fg_Green
    elif [[ $load -ge 100 && $load -lt 300 ]]; then fg_Color=$fg_Yellow
    elif [[ $load -ge 300 && $load -lt 500 ]]; then fg_Color=$fg_Orange
    elif [[ $load -ge 500                  ]]; then fg_Color=$fg_Red
    fi
    output+=" ${fg_Color}${avg}${fg_Default}"
  {% if 'MacOSX' in ansible_distribution -%}
  done <<< "$(sysctl -n vm.loadavg | grep -oP '\d+\.\d+')"
  {% elif 'Fedora' in ansible_distribution -%}
  done <<< "$(grep -Po '\d+\.\d+' /proc/loadavg)"
  {% endif -%}

  printf "%s" "${output:1}"  # substring removes extra space
}

battery() {
  local battery percent status fg_Color
  {% if 'MacOSX' in ansible_distribution -%}
  IFS=';' read -ra battery <<< "$(pmset -g batt | grep -Eo '[0-9]+%;.*;')"
  percent="${battery[0]//%/}"
  status="${battery[1]:1}"  # substring removes extra space
  {% elif 'Fedora' in ansible_distribution -%}
  percent="$(sed 's|%||' /sys/class/power_supply/BAT0/capacity)"
  status="$(cat /sys/class/power_supply/BAT0/status)"
  {% endif -%}

  if   [[ $percent -le 100 && $percent -ge 75 ]]; then fg_Color=$fg_Green
  elif [[ $percent -lt 75  && $percent -ge 50 ]]; then fg_Color=$fg_Yellow
  elif [[ $percent -lt 50  && $percent -ge 25 ]]; then fg_Color=$fg_Orange
  elif [[ $percent -lt 25  && $percent -ge 0  ]]; then fg_Color=$fg_Red
  fi

  percent="${fg_Color}${percent}%"
  status="${fg_Default}${status,,}"

  printf "%s %s" "${percent}" "${status}"
}

distribution() {
  local distro version {% if 'MacOSX' in ansible_distribution %}system_info{% endif %}

  {% if 'MacOSX' in ansible_distribution -%}
  mapfile -t system_info < <(sw_vers | awk '{print $2}' | head -n2)
  distro="${fg_Green}${system_info[0]}"
  version="${fg_Default}${system_info[1]}"
  {% elif 'Fedora' in ansible_distribution -%}
  source /etc/os-release
  distro="${fg_Green}${NAME}"
  version="${fg_Default}${VERSION_ID}"
  {% endif -%}
  printf "%s %s" "${distro}" "${version}"
}

{% if battery_present -%}
printf "#[bold]%s  %s  %s  %s#[nobold]" "$(battery)" "$(load_average)" "$(get_uptime)" "$(distribution)"
{% else -%}
printf "#[bold]%s  %s  %s#[nobold]" "$(load_average)" "$(get_uptime)" "$(distribution)"
{% endif -%}
