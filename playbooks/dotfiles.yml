---

- name: Install and configure dotfiles on localhost
  hosts: localhost

  handlers:

    - name: Process backups
      vars:
        backup_var: "{{ lookup('vars', item) }}"
      ansible.builtin.include_tasks: handlers/backups.yml
      when: backup_var['backup_file'] is defined
      loop: "{{ query('varnames', '^_backup_.+$') }}"
      loop_control:
        label: "{{ item | replace('_backup_', '') }}"
      tags: ['always', 'backups']

  tasks:

    - name: Ensure backup directory exists
      ansible.builtin.file:
        path: "{{ backups_dir }}"
        state: directory
        mode: 0755
      tags: always

    # ============================================================================
    #  dotfiles and command line configuration
    # ----------------------------------------------------------------------------

    - name: Create ~/Development folder structure
      ansible.builtin.file:
        path: "{{ ansible_user_dir }}/Development/{{ item }}"
        state: directory
        mode: 0755
      loop: ['Projects', 'Build', 'Scratch', 'Reference', 'Logs']
      tags: core

    - name: Install dotfiles
      ansible.posix.synchronize:
        src: dotfiles/
        dest: "{{ ansible_user_dir }}/"
        compress: false
        owner: false
        group: false
      tags: [core, dotfiles]

    - name: Install themes for bat
      ansible.builtin.command: "{{ bat_exec }} cache --build"
      changed_when: false
      tags: [core, bat]

    - name: Ensure glow config directory exists
      ansible.builtin.file:
        path: "{{ glow_config_path }}"
        state: directory
        mode: 0755
      tags: [core, glow]

    - name: Install glow configs
      ansible.builtin.copy:
        src: apps/glow/
        dest: "{{ glow_config_path }}/"
        mode: 0644
      tags: [core, glow]

    - name: Install cheat script
      ansible.builtin.get_url:
        url: https://cht.sh/:cht.sh
        dest: "{{ ansible_user_dir }}/.local/bin/cht"
        mode: 0755
      tags: [core, cheat]

    - name: Import ssh tasks
      ansible.builtin.import_tasks: tasks/dotfiles/ssh.yml
      tags: [core, ssh]

    - name: Include git tasks  # must follow ssh key creation
      ansible.builtin.import_tasks: tasks/dotfiles/git.yml
      tags: [core, git]

    - name: Import tmux tasks
      ansible.builtin.import_tasks: tasks/dotfiles/tmux.yml
      tags: [core, tmux]

    - name: Import vim tasks
      ansible.builtin.import_tasks: tasks/dotfiles/vim.yml
      tags: [core, vim]

    - name: Include k8s tasks
      ansible.builtin.import_tasks: tasks/dotfiles/k8s.yml
      tags: [core, k8s]

    # ============================================================================
    #  assets and modules
    # ----------------------------------------------------------------------------

    - name: Include font tasks
      ansible.builtin.import_tasks: tasks/dotfiles/fonts.yml
      tags: fonts

    - name: Import GitHub tasks
      ansible.builtin.import_tasks: tasks/dotfiles/github.yml
      tags: github

    - name: Symlink notes file
      ansible.builtin.file:
        src: "{{ ansible_user_dir }}/Development/Projects/notes-etc/main/README.md"
        dest: "{{ ansible_user_dir }}/Development/Reference/Notes.md"
        state: link
      tags: core

    - name: Install Python packages
      ansible.builtin.pip:
        executable: "{{ pip_exec }}"
        name: "{{ pypi_packages }}"
        extra_args: --user
      tags: python

    # ============================================================================
    #  mac apps configuration
    # ----------------------------------------------------------------------------

    - name: Import macOS app tasks
      ansible.builtin.import_tasks: tasks/dotfiles/mac_apps.yml
      when: "'Darwin' in ansible_system"
      tags: [icons, stats]

    # ============================================================================
    #  zsh and completions
    # ----------------------------------------------------------------------------

    - name: Import Zsh tasks
      ansible.builtin.import_tasks: tasks/dotfiles/zsh.yml
      tags: [core, zsh, dotfiles]
