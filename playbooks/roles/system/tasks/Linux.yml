---

- name: Add DNS fallback
  become: true
  tags: [system, linux_settings, dns, become]
  when: system_linux_add_dns_fallback
  block:
  - name: Ensure 'resolved' conf directory exists
    ansible.builtin.file:
      path: "/etc/systemd/resolved.conf.d"
      mode: "0755"
      state: "directory"
  - name: Add DNS fallback for systemd-resolved
    ansible.builtin.template:
      src: "{{ lookup('ansible.builtin.first_found', system_template_resolved) }}"
      dest: "/etc/systemd/resolved.conf.d/fallback_dns.conf"
      mode: "0644"

- name: Install system utility packages
  vars:
    pkg_mgr: "{{ ansible_facts['pkg_mgr'] }}"
  ansible.builtin.package:
    name: "{{ system_packages[pkg_mgr] }}"
  become: true
  tags: [system, linux_settings, dconf, become]

- name: Load dconf tasks
  vars:
    dconf_prefix: "{{ item['path'] }}"
    dconf_settings: "{{ item['keys'] }}"
  ansible.builtin.include_tasks:
    file: "dconf.yml"
  loop: "{{ system_linux_dconf_defaults \
      | community.general.lists_mergeby(system_linux_dconf_distro, 'path', recursive=True) }}"
  loop_control:
    label: "{{ dconf_prefix }}"
  when: system_linux_apply_dconf
  tags: [system, linux_settings, dconf]

- name: Apply Dracut settings
  ansible.builtin.lineinfile:
    create: "{{ item['create'] | default(true) }}"
    mode: "0644"
    path: "{{ item['path'] }}"
    line: "{{ item['line'] | default(omit) }}"
    regexp: "{{ item['regexp'] | default(omit) }}"
    state: "{{ item['state'] | default('present') }}"
    search_string: "{{ item['search_string'] | default(omit) }}"
    insertafter: "{{ item['insertafter'] | default(omit) }}"
    insertbefore: "{{ item['insertbefore'] | default(omit) }}"
    backrefs: "{{ item['backrefs'] | default(omit) }}"
  loop: "{{ system_linux_dracut_settings }}"
  loop_control:
    label: "{{ item['desc'] }}"
  become: true
  notify: Regenerate Dracut
  tags: [system, linux_settings, dracut, become]
