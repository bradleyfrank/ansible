#!/usr/bin/env sh

set -o errexit

ANSIBLE_REPO_PATH="${HOME}/ansible.$(date +%H%M%S)"
ANSIBLE_REPO_BRANCH="main"
ANSIBLE_REPO_URL="https://github.com/bradleyfrank/ansible.git"
ANSIBLE_REPO_INVENTORY="${HOME}/.ansible/inventory/host_vars/localhost.yml"
ANSIBLE_VAULT_FILE="${HOME}/.ansible/vault"

INVENTORY_EDIT_MESSAGE="Save and quit to continue running the install script."
VAULT_PASSWORD_FILE="${HOME}/.ansible/vault"; export VAULT_PASSWORD_FILE

HOMEBREW_INSTALL_ON_LINUX=1
HOMEBREW_INSTALL_SCRIPT="https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh"

install_homebrew() {
  case "$ID" in
    fedora) sudo dnf install -y procps-ng file @development-tools ;;
    debian|ubuntu|linuxmint|pop) sudo apt-get install -y build-essential procps file ;;
    macos) sudo softwareupdate --install-rosetta ;;
  esac
  NONINTERACTIVE=1 /bin/bash -c "$(curl -fsSL $HOMEBREW_INSTALL_SCRIPT)"
}

bootstrap_mac() {
  if ! pgrep caffeinate >/dev/null; then (caffeinate -d -i -m -u &); fi
  export PATH="/opt/homebrew/bin:/usr/local/bin:${PATH}"
  ID=macos install_homebrew
  brew install python3 git
}

bootstrap_linux() {
  sudo systemctl stop packagekit
  # shellcheck disable=SC1091
  . /etc/os-release

  case "$ID" in
    fedora)
      sudo dnf clean all
      sudo dnf makecache
      sudo dnf install -y python3 python3-devel python3-pip python3-wheel gcc git redhat-lsb-core
      ;;
    debian|ubuntu|linuxmint|pop)
      sudo apt-get clean
      sudo apt-get update
      sudo apt-get install -y python3 python3-pip python3-virtualenv git lsb-release
      ;;
    *) exit 1 ;;
  esac

  if [ -n "$HOMEBREW_INSTALL_ON_LINUX" ]; then install_homebrew; fi
}

while getopts ':bg:' opt; do
  case "$opt" in
    b) unset HOMEBREW_INSTALL_ON_LINUX ;;
    g) ANSIBLE_REPO_BRANCH="$OPTARG" ;;
    *) exit 1 ;;
  esac
done

case $(uname -s) in
  Darwin) bootstrap_mac ;;
  Linux)  bootstrap_linux ;;
  *)      exit 1 ;;
esac

git clone "$ANSIBLE_REPO_URL" "$ANSIBLE_REPO_PATH"
cd "$ANSIBLE_REPO_PATH" >/dev/null
git checkout "$ANSIBLE_REPO_BRANCH"

PATH="$(python3 -m site --user-base)/bin:${PATH}"; export PATH
python3 -m virtualenv venv
#shellcheck disable=SC1091
. venv/bin/activate
pip install --no-cache-dir --requirement requirements.txt

ansible-playbook playbooks/install_requirements.yml
ansible-playbook playbooks/build_inventory.yml
vim -c "e ${ANSIBLE_REPO_INVENTORY}|redraw|echom '${INVENTORY_EDIT_MESSAGE}'"
ansible-playbook playbooks/site.yml \
  --ask-become-pass \
  --vault-pass-file "$ANSIBLE_VAULT_FILE"
ansible-playbook playbooks/show_secrets.yml \
  --extra_vars "output_to_file=true" \
  --vault-pass-file "$ANSIBLE_VAULT_FILE"
