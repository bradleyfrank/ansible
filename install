#!/usr/bin/env sh
# shellcheck disable=SC1090,SC1091

set -o errexit

ANSIBLE_REPO_PATH="${HOME}/ansible.$(date +%H%M%S)"
ANSIBLE_REPO_BRANCH="${ANSIBLE_REPO_BRANCH:-main}"
ANSIBLE_REPO_URL="${ANSIBLE_REPO_URL:-https://github.com/bradleyfrank/ansible.git}"

ANSIBLE_HOST_VARS="${HOME}/.ansible/inventory/host_vars/$(uname --nodename).yml"
HOMEBREW_INSTALL_SCRIPT="https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh"

DOTFILES_REPO_URL="${DOTFILES_REPO_URL:-https://github.com/bradleyfrank/dotfiles}"
DOTFILES_REPO_BRANCH="${DOTFILES_REPO_BRANCH:-main}"

export DOTFILES_REPO_URL
export DOTFILES_REPO_BRANCH


install_homebrew() {
  case "$ID" in
    fedora) sudo dnf install -y procps-ng file @development-tools ;;
    debian|ubuntu|linuxmint|pop) sudo apt-get install -y build-essential procps file ;;
    macos) sudo softwareupdate --install-rosetta ;;
  esac
  NONINTERACTIVE=1 /bin/bash -c "$(curl -fsSL $HOMEBREW_INSTALL_SCRIPT)"
}


bootstrap_mac() {
  pgrep caffeinate >/dev/null || (caffeinate -d -i -m -u &)
  export PATH="/opt/homebrew/bin:/usr/local/bin:${PATH}"
  ID=macos install_homebrew
  brew install python3 git
}


bootstrap_linux() {
  sudo systemctl stop packagekit
  . /etc/os-release

  case "$ID" in
    fedora)
      sudo dnf clean all
      sudo dnf makecache
      sudo dnf install -y python3 python3-devel python3-pip python3-wheel gcc git redhat-lsb-core
      ;;
    debian|ubuntu|linuxmint|pop)
      sudo apt-get clean
      sudo apt-get update
      sudo apt-get install -y python3 python3-pip python3-venv git lsb-release
      ;;
    *) exit 1 ;;
  esac

  if [ -z "$SKIP_HOMEBREW_LINUX" ]; then
    install_homebrew
  fi
}


case $(uname -m) in (aarch*|arm*)
  SKIP_HOMEBREW_LINUX=1 ;;
esac

case $(uname -s) in
  Darwin) bootstrap_mac ;;
  Linux)  bootstrap_linux ;;
  *)      exit 1 ;;
esac

git clone "$ANSIBLE_REPO_URL" "$ANSIBLE_REPO_PATH"
cd "$ANSIBLE_REPO_PATH" >/dev/null
git checkout "$ANSIBLE_REPO_BRANCH"

PATH="$(python3 -m site --user-base)/bin:${PATH}"; export PATH
python3 -m venv venv
. venv/bin/activate
pip install --no-cache-dir --requirement requirements.txt

ansible-playbook playbooks/bootstrap_ansible.yml --inventory inventory.ini

grep "^(#|-|$)" roles/*/defaults/main.yml \
  --invert-match \
  --no-filename \
  --extended-regexp \
  --color=never \
  | sed "s/^/# /g" >> "${ANSIBLE_HOST_VARS}"

vim -c "e ${ANSIBLE_HOST_VARS}|redraw|echom 'Save and quit to continue running Ansible.'"

if [ -n "$SKIP_OP" ]; then
  ansible-playbook playbooks/setup_onepassword.yml \
    --ask-become-pass \
    --extra-vars "onepassword_skip_setup=1" \
    --extra-vars "onepassword_signin_url=0" \
    --extra-vars "onepassword_email_address=0" \
    --extra-vars "onepassword_secret_key=0" \
    --extra-vars "onepassword_account_password=0"
else
  ansible-playbook playbooks/setup_onepassword.yml --ask-become-pass
  . "${HOME}/.op_session"
  rm --force "${HOME}/.op_session"
fi

ansible-playbook playbooks/site.yml --ask-become-pass --tags "all,never"
